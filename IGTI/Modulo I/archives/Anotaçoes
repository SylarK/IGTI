<! ES6+ !>

- Podemos utiliza-lo utilizando transpiladores (Babel, TypeScript).

- var: escopo amplo
- let: escopo reduzido
- const: garantir imutabilidade -> Não se aplica a vetores e a objetos

- Arrow Functions : possui uma sintaxe mais declarativa e funcional
const makeBeer = function beerFun(qty) {
  return 'Beer'.repeat(qty)
}

const makeWine = (qty) => 'Wine'.repeat(qty)

- Template Literals 

- Default parameters

- Operador ... (rest / spread)
  
  [SPREAD]
  Muito útil para se trabalhar com vetores e objetos. 
  Espalha os itens do array, que podem ser recuperados para compor um outro array.
  [REST]
  Agrupando os parâmetros em um array.
  Permite funções com número infinito de parâmtros.

- Destructuring

- Javascript assíncrona
  Existem operações que podem ser lentas (requisição de dados à API, 
  processamento intenso de dados, comunicação com o banco de dados (node.js))
  É extremamente importante que o JS não espere o término de instruções lentas.
  A principal técnica para garantir isso é a utilização do EVENT LOOP.
